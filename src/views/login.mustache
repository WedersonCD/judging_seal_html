<!DOCTYPE html>
<html lang="en">

{{> partials/head}}
<link rel="stylesheet" href="/css/login.css">

<body>
    <div class="content">
        <section class="header">
            <img height="100px" width="100px" src='/images/star_fish.png'>
            <h1>Judging Seal</h1>
            <h4>Rate and track everthing!</h4>
        </section>

        <section class="input">
            <input type="email" id="user_email" name="user_email" placeholder='mail@gmail.com' _="install validateEmail"> 
            <input type="password" id="user_psw" name="user_psw" placeholder='password'>   
        </section>

        <section class="buttons">

        <div class="login button-primary clickable" _="
        on click
            
            set user_email to #user_email.value
            set user_psw to #user_psw.value
            js(user_email,user_psw)
                return 'user_email='+encodeURIComponent(user_email)+'&user_psw='+encodeURIComponent(user_psw)
            end put the result into encodedLink

            fetch /login with method: 'POST', body: `${encodedLink}`
        end

        on fetch:afterResponse
            if detail.response.ok then
                go to url /ocean
            else
                set h1 to <h1/>
                add .color-red to h1
                set previusText to h1's innerText
                set h1's innerText to 'Type it right ğŸ˜ !!!!!!'
                wait 3s
                set h1's innerText to previusText
                remove .color-red from h1
            end
        end
        
        on fetch:beforeRequest(headers)
            set headers['Content-Type'] to 'application/x-www-form-urlencoded'
        end
        ">
        Start Judging!!!!
        </div>

        <div class="margin-top-5 clickable" _="
        on click

            set user_email to #user_email.value
            set user_psw to #user_psw.value
            js(user_email,user_psw)
                return 'user_email='+encodeURIComponent(user_email)+'&user_psw='+encodeURIComponent(user_psw)
            end put the result into encodedLink
            fetch /new_user with method: 'POST', body: `${encodedLink}`
        end

        on fetch:afterResponse
            if detail.response.ok then
                go to url /ocean
            else
                set h1 to <h1/>
                add .color-red to h1
                set previusText to h1's innerText
                set h1's innerText to '!ğŸ˜ !ğŸ˜ !ğŸ˜ !ğŸ˜ !ğŸ˜ !ğŸ˜ !ğŸ˜ !'
                wait 3s
                set h1's innerText to previusText
                remove .color-red from h1
            end
        end

        on fetch:beforeRequest(headers)
            set headers['Content-Type'] to 'application/x-www-form-urlencoded'
        end
        ">
            Doesn't have account? Sing Up
        </div>
    </div>
        </section>

</body>

</html>